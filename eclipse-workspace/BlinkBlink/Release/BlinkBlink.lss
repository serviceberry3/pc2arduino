
BlinkBlink.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00000126  0000019a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000126  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000011  00000000  00000000  0000019a  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001ac  2**2
                  CONTENTS, READONLY
  4 .debug_info   000005f4  00000000  00000000  000001ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 000005a2  00000000  00000000  000007e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   0000001a  00000000  00000000  00000d82  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    00000208  00000000  00000000  00000d9c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 83 00 	call	0x106	; 0x106 <main>
  78:	0c 94 91 00 	jmp	0x122	; 0x122 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <initializeIO>:
  80:	8a b1       	in	r24, 0x0a	; 10
  82:	8c 6f       	ori	r24, 0xFC	; 252
  84:	8a b9       	out	0x0a, r24	; 10
  86:	8c ef       	ldi	r24, 0xFC	; 252
  88:	8b b9       	out	0x0b, r24	; 11
  8a:	25 9a       	sbi	0x04, 5	; 4
  8c:	08 95       	ret

0000008e <test_fxn>:
  8e:	0e 94 40 00 	call	0x80	; 0x80 <initializeIO>
  92:	2d 9a       	sbi	0x05, 5	; 5
  94:	2f ef       	ldi	r18, 0xFF	; 255
  96:	89 e6       	ldi	r24, 0x69	; 105
  98:	98 e1       	ldi	r25, 0x18	; 24
  9a:	21 50       	subi	r18, 0x01	; 1
  9c:	80 40       	sbci	r24, 0x00	; 0
  9e:	90 40       	sbci	r25, 0x00	; 0
  a0:	e1 f7       	brne	.-8      	; 0x9a <test_fxn+0xc>
  a2:	00 c0       	rjmp	.+0      	; 0xa4 <test_fxn+0x16>
  a4:	00 00       	nop
  a6:	2d 98       	cbi	0x05, 5	; 5
  a8:	2f ef       	ldi	r18, 0xFF	; 255
  aa:	89 e6       	ldi	r24, 0x69	; 105
  ac:	98 e1       	ldi	r25, 0x18	; 24
  ae:	21 50       	subi	r18, 0x01	; 1
  b0:	80 40       	sbci	r24, 0x00	; 0
  b2:	90 40       	sbci	r25, 0x00	; 0
  b4:	e1 f7       	brne	.-8      	; 0xae <test_fxn+0x20>
  b6:	00 c0       	rjmp	.+0      	; 0xb8 <test_fxn+0x2a>
  b8:	00 00       	nop
  ba:	eb cf       	rjmp	.-42     	; 0x92 <test_fxn+0x4>

000000bc <pwm_init>:
  bc:	83 e3       	ldi	r24, 0x33	; 51
  be:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__DATA_REGION_ORIGIN__+0x50>
  c2:	e1 eb       	ldi	r30, 0xB1	; 177
  c4:	f0 e0       	ldi	r31, 0x00	; 0
  c6:	80 81       	ld	r24, Z
  c8:	81 60       	ori	r24, 0x01	; 1
  ca:	80 83       	st	Z, r24
  cc:	80 e8       	ldi	r24, 0x80	; 128
  ce:	80 93 b4 00 	sts	0x00B4, r24	; 0x8000b4 <__DATA_REGION_ORIGIN__+0x54>
  d2:	08 95       	ret

000000d4 <uart_init>:
  d4:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
  d8:	87 e6       	ldi	r24, 0x67	; 103
  da:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
  de:	86 e0       	ldi	r24, 0x06	; 6
  e0:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__DATA_REGION_ORIGIN__+0x62>
  e4:	e1 ec       	ldi	r30, 0xC1	; 193
  e6:	f0 e0       	ldi	r31, 0x00	; 0
  e8:	80 81       	ld	r24, Z
  ea:	80 61       	ori	r24, 0x10	; 16
  ec:	80 83       	st	Z, r24
  ee:	08 95       	ret

000000f0 <uart_getc>:
  f0:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__DATA_REGION_ORIGIN__+0x60>
  f4:	87 ff       	sbrs	r24, 7
  f6:	fc cf       	rjmp	.-8      	; 0xf0 <uart_getc>
  f8:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
  fc:	08 95       	ret

000000fe <initIO>:
  fe:	53 9a       	sbi	0x0a, 3	; 10
 100:	8f ef       	ldi	r24, 0xFF	; 255
 102:	84 b9       	out	0x04, r24	; 4
 104:	08 95       	ret

00000106 <main>:
 106:	0e 94 7f 00 	call	0xfe	; 0xfe <initIO>
 10a:	0e 94 6a 00 	call	0xd4	; 0xd4 <uart_init>
 10e:	0e 94 5e 00 	call	0xbc	; 0xbc <pwm_init>
 112:	0e 94 78 00 	call	0xf0	; 0xf0 <uart_getc>
 116:	80 fd       	sbrc	r24, 0
 118:	02 c0       	rjmp	.+4      	; 0x11e <main+0x18>
 11a:	2d 98       	cbi	0x05, 5	; 5
 11c:	fa cf       	rjmp	.-12     	; 0x112 <main+0xc>
 11e:	2d 9a       	sbi	0x05, 5	; 5
 120:	f8 cf       	rjmp	.-16     	; 0x112 <main+0xc>

00000122 <_exit>:
 122:	f8 94       	cli

00000124 <__stop_program>:
 124:	ff cf       	rjmp	.-2      	; 0x124 <__stop_program>
