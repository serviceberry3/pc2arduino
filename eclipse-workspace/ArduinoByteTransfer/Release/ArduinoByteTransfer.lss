
ArduinoByteTransfer.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000002  00800100  00000170  000001e4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000170  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000011  00000000  00000000  000001e6  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001f8  2**2
                  CONTENTS, READONLY
  4 .debug_info   000005f4  00000000  00000000  00000238  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 000005a2  00000000  00000000  0000082c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   0000001a  00000000  00000000  00000dce  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    00000208  00000000  00000000  00000de8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e0 e7       	ldi	r30, 0x70	; 112
  7c:	f1 e0       	ldi	r31, 0x01	; 1
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a2 30       	cpi	r26, 0x02	; 2
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
  8a:	0e 94 a0 00 	call	0x140	; 0x140 <main>
  8e:	0c 94 b6 00 	jmp	0x16c	; 0x16c <_exit>

00000092 <__bad_interrupt>:
  92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <initializeIO>:
  96:	8a b1       	in	r24, 0x0a	; 10
  98:	8c 6f       	ori	r24, 0xFC	; 252
  9a:	8a b9       	out	0x0a, r24	; 10
  9c:	8c ef       	ldi	r24, 0xFC	; 252
  9e:	8b b9       	out	0x0b, r24	; 11
  a0:	25 9a       	sbi	0x04, 5	; 4
  a2:	08 95       	ret

000000a4 <test_fxn>:
  a4:	0e 94 4b 00 	call	0x96	; 0x96 <initializeIO>
  a8:	2d 9a       	sbi	0x05, 5	; 5
  aa:	2f ef       	ldi	r18, 0xFF	; 255
  ac:	89 e6       	ldi	r24, 0x69	; 105
  ae:	98 e1       	ldi	r25, 0x18	; 24
  b0:	21 50       	subi	r18, 0x01	; 1
  b2:	80 40       	sbci	r24, 0x00	; 0
  b4:	90 40       	sbci	r25, 0x00	; 0
  b6:	e1 f7       	brne	.-8      	; 0xb0 <test_fxn+0xc>
  b8:	00 c0       	rjmp	.+0      	; 0xba <test_fxn+0x16>
  ba:	00 00       	nop
  bc:	2d 98       	cbi	0x05, 5	; 5
  be:	2f ef       	ldi	r18, 0xFF	; 255
  c0:	89 e6       	ldi	r24, 0x69	; 105
  c2:	98 e1       	ldi	r25, 0x18	; 24
  c4:	21 50       	subi	r18, 0x01	; 1
  c6:	80 40       	sbci	r24, 0x00	; 0
  c8:	90 40       	sbci	r25, 0x00	; 0
  ca:	e1 f7       	brne	.-8      	; 0xc4 <test_fxn+0x20>
  cc:	00 c0       	rjmp	.+0      	; 0xce <test_fxn+0x2a>
  ce:	00 00       	nop
  d0:	eb cf       	rjmp	.-42     	; 0xa8 <test_fxn+0x4>

000000d2 <pwm_init>:
  d2:	83 e3       	ldi	r24, 0x33	; 51
  d4:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__DATA_REGION_ORIGIN__+0x50>
  d8:	e1 eb       	ldi	r30, 0xB1	; 177
  da:	f0 e0       	ldi	r31, 0x00	; 0
  dc:	80 81       	ld	r24, Z
  de:	81 60       	ori	r24, 0x01	; 1
  e0:	80 83       	st	Z, r24
  e2:	80 e8       	ldi	r24, 0x80	; 128
  e4:	80 93 b4 00 	sts	0x00B4, r24	; 0x8000b4 <__DATA_REGION_ORIGIN__+0x54>
  e8:	08 95       	ret

000000ea <uart_init>:
  ea:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
  ee:	87 e6       	ldi	r24, 0x67	; 103
  f0:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
  f4:	86 e0       	ldi	r24, 0x06	; 6
  f6:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__DATA_REGION_ORIGIN__+0x62>
  fa:	e1 ec       	ldi	r30, 0xC1	; 193
  fc:	f0 e0       	ldi	r31, 0x00	; 0
  fe:	80 81       	ld	r24, Z
 100:	88 61       	ori	r24, 0x18	; 24
 102:	80 83       	st	Z, r24
 104:	08 95       	ret

00000106 <uart_getc>:
 106:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__DATA_REGION_ORIGIN__+0x60>
 10a:	87 fd       	sbrc	r24, 7
 10c:	02 c0       	rjmp	.+4      	; 0x112 <uart_getc+0xc>
 10e:	2c 9a       	sbi	0x05, 4	; 5
 110:	fa cf       	rjmp	.-12     	; 0x106 <uart_getc>
 112:	2c 98       	cbi	0x05, 4	; 5
 114:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
 118:	08 95       	ret

0000011a <uart_putc>:
 11a:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__DATA_REGION_ORIGIN__+0x60>
 11e:	95 ff       	sbrs	r25, 5
 120:	fc cf       	rjmp	.-8      	; 0x11a <uart_putc>
 122:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
 126:	80 e0       	ldi	r24, 0x00	; 0
 128:	08 95       	ret

0000012a <uart_putchar>:
 12a:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
 12e:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__DATA_REGION_ORIGIN__+0x60>
 132:	86 ff       	sbrs	r24, 6
 134:	fc cf       	rjmp	.-8      	; 0x12e <uart_putchar+0x4>
 136:	08 95       	ret

00000138 <initIO>:
 138:	53 9a       	sbi	0x0a, 3	; 10
 13a:	8f ef       	ldi	r24, 0xFF	; 255
 13c:	84 b9       	out	0x04, r24	; 4
 13e:	08 95       	ret

00000140 <main>:
 140:	0e 94 9c 00 	call	0x138	; 0x138 <initIO>
 144:	0e 94 75 00 	call	0xea	; 0xea <uart_init>
 148:	2d 9a       	sbi	0x05, 5	; 5
 14a:	0e 94 83 00 	call	0x106	; 0x106 <uart_getc>
 14e:	80 fd       	sbrc	r24, 0
 150:	03 c0       	rjmp	.+6      	; 0x158 <main+0x18>
 152:	2d 98       	cbi	0x05, 5	; 5
 154:	80 e3       	ldi	r24, 0x30	; 48
 156:	02 c0       	rjmp	.+4      	; 0x15c <main+0x1c>
 158:	2d 9a       	sbi	0x05, 5	; 5
 15a:	81 e3       	ldi	r24, 0x31	; 49
 15c:	0e 94 8d 00 	call	0x11a	; 0x11a <uart_putc>
 160:	f4 cf       	rjmp	.-24     	; 0x14a <main+0xa>

00000162 <ISR>:
 162:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
 166:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 16a:	08 95       	ret

0000016c <_exit>:
 16c:	f8 94       	cli

0000016e <__stop_program>:
 16e:	ff cf       	rjmp	.-2      	; 0x16e <__stop_program>
